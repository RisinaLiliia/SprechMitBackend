{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Contacts App"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:3000"
    },
    {
      "url": "https://sprechmitbackend.onrender.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "SprechMit",
      "description": "Operation with contacts"
    },
    {
      "name": "Auth",
      "description": "Auth operations"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Registration",
        "operationId": "registerUser",
        "description": "**User Registration**\n\nThis endpoint allows new users to register an account by providing essential information.\n\n### Required Fields\n- **Name**: The full name of the user.\n- **Email**: A valid email address that will be used for login and communication.\n- **Password**: A secure password for the user's account.\n- **Privacy Policy Accepted At**: ISO 8601 date-time string indicating when the user accepted the privacy policy.\n\n### Optional Fields\n- There are no optional fields for this endpoint. All fields are required.\n\n### How to Use\n- **Name**: Enter the user's full name.\n- **Email**: Provide a unique email address for the user.\n- **Password**: Choose a strong password for the userâ€™s account.\n- **Privacy Policy Accepted At**: Provide the date/time the user accepted the privacy policy.\n\nAfter successful registration, the user will receive a confirmation response with details of the newly created account.\n\n### Security\n- This endpoint does not require authentication. You can access this endpoint directly to register a new user.\n",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password",
                  "privacyPolicyAccepted"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The user's full name.",
                    "example": "User One"
                  },
                  "email": {
                    "type": "string",
                    "description": "The user's email address.",
                    "example": "userone@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password.",
                    "example": "123Qwe!xX"
                  },
                  "privacyPolicyAccepted": {
                    "type": "boolean",
                    "description": "User accepted privacy policy (true/false).",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "User created successfully"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "bIHHDtBrjM3x61fcXQWrBiB0vvA/Fu0Z25YLbpAm"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Login",
        "operationId": "loginUser",
        "description": "**User Login**\n\nThis endpoint allows registered users to log in to their account by providing their email and password.\n\n### Required Fields\n- **Email**: The email address associated with the user's account.\n- **Password**: The password for the user's account.\n\n### How to Use\n- **Email**: Enter the email address used during registration.\n- **Password**: Provide the password associated with the email address.\n\nUpon successful login, the response will include an access token that can be used to authenticate further requests.\n\n### Security\n- This endpoint does not require authentication for accessing the login functionality.\n",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address associated with the user's account.",
                    "example": "userone@example.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for the user's account.",
                    "example": "123Qwe!xX"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**Successfully Logged In**\n\nThe login was successful, and an access token has been provided. Use this token for subsequent authenticated requests.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200,
                      "description": "HTTP status code indicating a successful login"
                    },
                    "message": {
                      "type": "string",
                      "example": "Login successfully!",
                      "description": "Confirmation message indicating successful login"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                          "description": "The access token to be used for authenticated requests"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "Log out a user",
        "security": [],
        "responses": {
          "204": {
            "description": "**No Content**\n\nThe user was successfully logged out. There is no content in the response body, only the status code 204 indicating a successful logout.\n",
            "content": {}
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh session accessToken",
        "operationId": "refresh",
        "description": "Refresh session accessToken",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found - Session or Authorization header not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404,
                  "description": "HTTP status code"
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError",
                  "description": "Error message indicating that the resource was not found"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found",
                      "description": "Detailed message about the missing session or header"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "examples": {
              "no_token": {
                "summary": "Session not found",
                "value": {
                  "status": 404,
                  "message": "NotFoundError",
                  "data": {
                    "message": "Session not found"
                  }
                }
              },
              "token_expired": {
                "summary": "Authorization header not found",
                "value": {
                  "status": 404,
                  "message": "NotFoundError",
                  "data": {
                    "message": "Authorization header not found"
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "**Conflict Error (409)**\n\nThis error occurs when there is a conflict with the current state of the resource.\n- In this case, the conflict arises because the `email` provided is already in use by another account.\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "HTTP status code indicating the error type.",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "description": "A brief summary of the conflict error.",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Specific details about the error, such as the conflicting field.",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server error"
                }
              }
            }
          }
        }
      }
    }
  }
}